Results generated by fwts: Version V14.03.01 (2014-03-27 02:14:17).

Some of this work - Copyright (c) 1999 - 2014, Intel Corp. All rights reserved.
Some of this work - Copyright (c) 2010 - 2014, Canonical.

This test run on 13/12/15 at 11:32:17 on host Linux wout-ubuntu
3.13.0-65-generic #106-Ubuntu SMP Fri Oct 2 22:08:27 UTC 2015 x86_64.

Command: "fwts ".
Running tests: version bios_info oops klog mtrr acpiinfo securebootcert csm
maxreadreq crs aspm hpet_check dmicheck microcode msr nx cpufreq maxfreq virt
pnp pciirq os2gap mpcheck hda_audio ebda bios32 apicedge wmi wakealarm
syntaxcheck pcc osilinux method mcfg fan fadt dmar cstates checksum
autobrightness apicinstance acpitables.

version: Gather kernel system information.
--------------------------------------------------------------------------------
Test 1 of 4: Gather kernel signature.
Signature: Ubuntu 3.13.0-65.106-generic 3.13.11-ckt26

Test 2 of 4: Gather kernel system information.
Kernel Version: Linux version 3.13.0-65-generic (buildd@lgw01-26) (gcc version
4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #106-Ubuntu SMP Fri Oct 2 22:08:27 UTC 2015

Test 3 of 4: Gather kernel boot command line.
Kernel boot command line: BOOT_IMAGE=/boot/vmlinuz-3.13.0-65-generic
root=UUID=f88350de-6544-4559-bbae-712f984e2c45 ro quiet splash

Test 4 of 4: Gather ACPI driver version.
ACPI Version: 20131115

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 4 info only.
================================================================================

bios_info: Gather BIOS DMI information.
--------------------------------------------------------------------------------
Test 1 of 1: Gather BIOS DMI information
BIOS Vendor       : American Megatrends Inc.
BIOS Version      : N55SF.207
BIOS Release Date : 08/29/2011
Board Name        : N55SF
Board Serial #    : BSN12345678901234567
Board Version     : 1.0
Board Asset Tag   : ATN12345678901234567
Chassis Serial #  : CSN12345678901234567
Chassis Type      : 10
Chassis Vendor    : ASUSTeK Computer Inc.
Chassis Version   : 1.0
Chassic Asset Tag : No Asset Tag
Product Name      : N55SF
Product Serial #  : SSN12345678901234567
Product UUID      : 4E435451-354A-3034-4B32-3085A97F373B
Product Version   : 1.0
System Vendor     : ASUSTeK Computer Inc.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

oops: Scan kernel log for Oopses.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log oops check.
PASSED: Test 1, Found no oopses in kernel log.
PASSED: Test 1, Found no WARN_ON warnings in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

klog: Scan kernel log for errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log error check.
FAILED [HIGH] KlogAcpiTwoFacs: Test 1, HIGH Kernel message: [ 0.000000] ACPI
Warning: 32/64 FACS address mismatch in FADT - two FACS tables! (20131115
/tbfadt-395)

ADVICE: The FADT table contains a mismatch between the 32 bit pointer
(FIRMWARE_CTRL) and 64 bit pointer (X_FIRMWARE_CTRL) pointer to the FACS table.
Section 5.2.9 of version 4.0a of the ACPI specification states that
X_FIRMWARE_CTRL should be zero if FIRMWARE_CTRL is defined, or FIRMWARE_CTRL
should be zero if X_FIRMWARE_CTRL is zero. With two different pointers defined,
the kernel has to make a choice, and opts for the 32 bit pointer. Because these
pointers are different, it suggests either one of them is incorrect, or
different 32 bit and 64 bit FACS tables are present in your system, which is NOT
complaint with the ACPI specification. The kernel has to make a choice and opts
for the 32 bit FIRMWARE_CTRL.

Kernel message: [ 0.003841] ENERGY_PERF_BIAS: Set to 'normal', was 'performance'

ADVICE: This is not exactly a failure but a warning from the kernel. The
MSR_IA32_ENERGY_PERF_BIAS was initialized and defaulted to a high performance
bias setting. The kernel has detected this and changed it down to a 'normal'
bias setting.

Kernel message: [ 0.235662] [Firmware Bug]: ACPI: BIOS _OSI(Linux) query ignored

ADVICE: This is not exactly a failure mode but a warning from the kernel. The
_OSI() method has implemented a match to the 'Linux' query in the DSDT and this
is redundant because the ACPI driver matches onto the Windows _OSI strings by
default.

Kernel message: [ 0.304991] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S1_] (20131115/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S1 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means kernel don't know how to enter S1
sleep state. But it should not be a problem if the S1 sleep state isn't
supported intentionally.

Kernel message: [ 0.304997] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S2_] (20131115/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S2 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means kernel don't know how to enter S2
sleep state. But it should not be a problem if the S2 sleep state isn't
supported intentionally.

FAILED [LOW] KlogAcpiDeprecatedProcfsInterface: Test 1, LOW Kernel message: [
1.033805] ACPI: Deprecated procfs I/F for AC is loaded, please retry with
CONFIG_ACPI_PROCFS_POWER cleared

ADVICE: Using an old procfs interface for ACPI AC Adapter, this occurs if
CONFIG_ACPI_PROCFS_POWER is enabled. This should be disabled for kernels >
2.6.37.

FAILED [LOW] KlogAcpiDeprecatedProcfsInterface: Test 1, LOW Kernel message: [
1.071181] ACPI: Deprecated procfs I/F for battery is loaded, please retry with
CONFIG_ACPI_PROCFS_POWER cleared

ADVICE: Using an old procfs interface for ACPI battery, this occurs if
CONFIG_ACPI_PROCFS_POWER is enabled. This should be disabled for kernels >
2.6.37.

FAILED [LOW] KlogAcpiSystemIOConflict: Test 1, LOW Kernel message: [ 24.394752]
ACPI Warning: 0x0000000000000428-0x000000000000042f SystemIO conflicts with
Region \GPIS 1 (20131115/utaddress-251)

ADVICE: A resource conflict between an ACPI OperationRegion and a native driver
has been detected. By default the kernel will use a strict policy and will not
allow this region to conflict and -EBUSY will be returned to the caller that was
trying to allocate the already claimed region. If an ACPI driver is available
for this device then this should be used instead of a native driver, so
disabling the native driver may help. (Note that the lpc_ich driver can trigger
these warnings, in which case they can generally be ignored). One can specify
kernel boot parameter acpi_enforce_resources=lax to disable these checks but it
may lead to random problems and system instability. Alternatively, one can
specify acpi_enforce_resources=no and ACPI Operation Region resources will not
be registered.

FAILED [LOW] KlogAcpiSystemIOConflict: Test 1, LOW Kernel message: [ 24.394759]
ACPI Warning: 0x0000000000000428-0x000000000000042f SystemIO conflicts with
Region \PMIO 2 (20131115/utaddress-251)

ADVICE: A resource conflict between an ACPI OperationRegion and a native driver
has been detected. By default the kernel will use a strict policy and will not
allow this region to conflict and -EBUSY will be returned to the caller that was
trying to allocate the already claimed region. If an ACPI driver is available
for this device then this should be used instead of a native driver, so
disabling the native driver may help. (Note that the lpc_ich driver can trigger
these warnings, in which case they can generally be ignored). One can specify
kernel boot parameter acpi_enforce_resources=lax to disable these checks but it
may lead to random problems and system instability. Alternatively, one can
specify acpi_enforce_resources=no and ACPI Operation Region resources will not
be registered.

FAILED [LOW] KlogAcpiSystemIOConflict: Test 1, LOW Kernel message: [ 24.394769]
ACPI Warning: 0x0000000000000540-0x000000000000054f SystemIO conflicts with
Region \GPIO 1 (20131115/utaddress-251)

ADVICE: A resource conflict between an ACPI OperationRegion and a native driver
has been detected. By default the kernel will use a strict policy and will not
allow this region to conflict and -EBUSY will be returned to the caller that was
trying to allocate the already claimed region. If an ACPI driver is available
for this device then this should be used instead of a native driver, so
disabling the native driver may help. (Note that the lpc_ich driver can trigger
these warnings, in which case they can generally be ignored). One can specify
kernel boot parameter acpi_enforce_resources=lax to disable these checks but it
may lead to random problems and system instability. Alternatively, one can
specify acpi_enforce_resources=no and ACPI Operation Region resources will not
be registered.

FAILED [LOW] KlogAcpiSystemIOConflict: Test 1, LOW Kernel message: [ 24.394772]
ACPI Warning: 0x0000000000000540-0x000000000000054f SystemIO conflicts with
Region \GP01 2 (20131115/utaddress-251)

ADVICE: A resource conflict between an ACPI OperationRegion and a native driver
has been detected. By default the kernel will use a strict policy and will not
allow this region to conflict and -EBUSY will be returned to the caller that was
trying to allocate the already claimed region. If an ACPI driver is available
for this device then this should be used instead of a native driver, so
disabling the native driver may help. (Note that the lpc_ich driver can trigger
these warnings, in which case they can generally be ignored). One can specify
kernel boot parameter acpi_enforce_resources=lax to disable these checks but it
may lead to random problems and system instability. Alternatively, one can
specify acpi_enforce_resources=no and ACPI Operation Region resources will not
be registered.

FAILED [LOW] KlogAcpiSystemIOConflict: Test 1, LOW Kernel message: [ 24.394778]
ACPI Warning: 0x0000000000000530-0x000000000000053f SystemIO conflicts with
Region \GPIO 1 (20131115/utaddress-251)

ADVICE: A resource conflict between an ACPI OperationRegion and a native driver
has been detected. By default the kernel will use a strict policy and will not
allow this region to conflict and -EBUSY will be returned to the caller that was
trying to allocate the already claimed region. If an ACPI driver is available
for this device then this should be used instead of a native driver, so
disabling the native driver may help. (Note that the lpc_ich driver can trigger
these warnings, in which case they can generally be ignored). One can specify
kernel boot parameter acpi_enforce_resources=lax to disable these checks but it
may lead to random problems and system instability. Alternatively, one can
specify acpi_enforce_resources=no and ACPI Operation Region resources will not
be registered.

FAILED [LOW] KlogAcpiSystemIOConflict: Test 1, LOW Kernel message: [ 24.394782]
ACPI Warning: 0x0000000000000530-0x000000000000053f SystemIO conflicts with
Region \GP01 2 (20131115/utaddress-251)

ADVICE: A resource conflict between an ACPI OperationRegion and a native driver
has been detected. By default the kernel will use a strict policy and will not
allow this region to conflict and -EBUSY will be returned to the caller that was
trying to allocate the already claimed region. If an ACPI driver is available
for this device then this should be used instead of a native driver, so
disabling the native driver may help. (Note that the lpc_ich driver can trigger
these warnings, in which case they can generally be ignored). One can specify
kernel boot parameter acpi_enforce_resources=lax to disable these checks but it
may lead to random problems and system instability. Alternatively, one can
specify acpi_enforce_resources=no and ACPI Operation Region resources will not
be registered.

FAILED [LOW] KlogAcpiSystemIOConflict: Test 1, LOW Kernel message: [ 24.394787]
ACPI Warning: 0x0000000000000500-0x000000000000052f SystemIO conflicts with
Region \GPIO 1 (20131115/utaddress-251)

ADVICE: A resource conflict between an ACPI OperationRegion and a native driver
has been detected. By default the kernel will use a strict policy and will not
allow this region to conflict and -EBUSY will be returned to the caller that was
trying to allocate the already claimed region. If an ACPI driver is available
for this device then this should be used instead of a native driver, so
disabling the native driver may help. (Note that the lpc_ich driver can trigger
these warnings, in which case they can generally be ignored). One can specify
kernel boot parameter acpi_enforce_resources=lax to disable these checks but it
may lead to random problems and system instability. Alternatively, one can
specify acpi_enforce_resources=no and ACPI Operation Region resources will not
be registered.

FAILED [LOW] KlogAcpiSystemIOConflict: Test 1, LOW Kernel message: [ 24.394791]
ACPI Warning: 0x0000000000000500-0x000000000000052f SystemIO conflicts with
Region \GP01 2 (20131115/utaddress-251)

ADVICE: A resource conflict between an ACPI OperationRegion and a native driver
has been detected. By default the kernel will use a strict policy and will not
allow this region to conflict and -EBUSY will be returned to the caller that was
trying to allocate the already claimed region. If an ACPI driver is available
for this device then this should be used instead of a native driver, so
disabling the native driver may help. (Note that the lpc_ich driver can trigger
these warnings, in which case they can generally be ignored). One can specify
kernel boot parameter acpi_enforce_resources=lax to disable these checks but it
may lead to random problems and system instability. Alternatively, one can
specify acpi_enforce_resources=no and ACPI Operation Region resources will not
be registered.

FAILED [LOW] KlogAcpiSystemIOConflictLpcIchWatchDogTimer: Test 1, LOW Kernel
message: [ 24.394796] lpc_ich: Resource conflict(s) found affecting gpio_ich

ADVICE: A resource conflict has occurred between ACPI OperationRegions and the
same I/O region used by the lpc_ich driver for the General Purpose I/O (GPIO)
region. Sometimes this GPIO region is used by the firmware for rfkill or LED
controls or very rarely for the Embedded Controller System Control Interrupt.
This may require deeper inspection to check if the conflict will lead to any
real issues. However, in the vast majority of cases this warning can be ignored
as no harm will occur.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 32.018567] ACPI
Warning: \_SB_.PCI0.PEG0.GFX0._DSM: Argument #4 type mismatch - Found [Buffer],
ACPI requires [Package] (20131115/nsarguments-95)
Message repeated 9 times.

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

Found 13 unique errors in kernel log.

================================================================================
0 passed, 13 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mtrr: MTRR tests.
--------------------------------------------------------------------------------
MTRR overview
-------------
Reg 0: 0x0000000000000000 - 0x0000000080000000 (  2048 MB)   Write-Back
Reg 1: 0x0000000080000000 - 0x00000000a0000000 (   512 MB)   Write-Back
Reg 2: 0x00000000a0000000 - 0x00000000a8000000 (   128 MB)   Write-Back
Reg 3: 0x00000000a8000000 - 0x00000000aa000000 (    32 MB)   Write-Back
Reg 4: 0x00000000aa000000 - 0x00000000ab000000 (    16 MB)   Write-Back
Reg 5: 0x0000000100000000 - 0x0000000180000000 (  2048 MB)   Write-Back
Reg 6: 0x0000000180000000 - 0x00000001c0000000 (  1024 MB)   Write-Back
Reg 7: 0x00000001c0000000 - 0x00000001d0000000 (   256 MB)   Write-Back
Reg 8: 0x00000001cf800000 - 0x00000001d0000000 (     8 MB)   Uncached

Test 1 of 3: Validate the kernel MTRR IOMEM setup.
PASSED: Test 1, Memory ranges seem to have correct attributes.

Test 2 of 3: Validate the MTRR setup across all processors.
PASSED: Test 2, All processors have the a consistent MTRR setup.

Test 3 of 3: Test for AMD MtrrFixDramModEn being cleared by the BIOS.
SKIPPED: Test 3, CPU is not an AMD, cannot test.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

acpiinfo: General ACPI information test.
--------------------------------------------------------------------------------
Test 1 of 3: Determine Kernel ACPI version.
Kernel ACPICA driver version: 20131115, supports ACPI 5.0

Test 2 of 3: Determine machine's ACPI version.
FACP ACPI Version: 4.0 

Test 3 of 3: Determine AML compiler.
Determine the compiler used to generate the ACPI AML in the DSDT and SSDT.
Table DSDT, OEM _ASUS_, created with INTL (Intel) compiler.
Table SSDT0, OEM PmRef, created with INTL (Intel) compiler.
Table SSDT1, OEM PmRef, created with INTL (Intel) compiler.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 3 info only.
================================================================================

securebootcert: UEFI secure boot test.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

csm: UEFI Compatibility Support Module test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI Compatibility Support Module test.
Checking for UEFI Compatibility Support Module (CSM)
Int 10h jumps to 0xc0014 in option ROM at: 0xc0000..0xcf000
No CSM: Legacy BIOS firmware has video option ROM with Int 10h support.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

maxreadreq: Test firmware has set PCI Express MaxReadReq to a higher value on
non-motherboard devices.
--------------------------------------------------------------------------------
Test 1 of 1: Test firmware settings MaxReadReq for PCI Express devices.
PASSED: Test 1, All devices have MaxReadReq set > 128.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

crs: Test PCI host bridge configuration using _CRS.
--------------------------------------------------------------------------------
Test 1 of 1: Test PCI host bridge configuration using _CRS.
PASSED: Test 1, The kernel has detected a BIOS newer than the end of 2007 (8/29
/2011) and has assumed that your BIOS can correctly specify the host bridge MMIO
aperture using _CRS. If this does not work correctly you can override this by
booting with "pci=nocrs".

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

aspm: PCIe ASPM test.
--------------------------------------------------------------------------------
Test 1 of 2: PCIe ASPM ACPI test.
PCIe ASPM is not controlled by Linux kernel.

ADVICE: BIOS reports that Linux kernel should not modify ASPM settings that BIOS
configured. It can be intentional because hardware vendors identified some
capability bugs between the motherboard and the add-on cards.


Test 2 of 2: PCIe ASPM registers test.
PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 00h:1Ch.01h L0s not enabled.
WARNING: Test 2, Device 03h:00h.00h L0s not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.

PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 00h:1Ch.03h L0s not enabled.
WARNING: Test 2, RP 00h:1Ch.03h L1 not enabled.
WARNING: Test 2, Device 04h:00h.00h L0s not enabled.
WARNING: Test 2, Device 04h:00h.00h L1 not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.


ADVICE: The ASPM L1 low power Link state is optimized for maximum power savings
with longer entry and exit latencies. Disabling L1 of a PCIe device may
increases power consumption, and will impact the battery life of a mobile system
significantly.

PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 00h:1Ch.05h L0s not enabled.
WARNING: Test 2, Device 05h:00h.00h L0s not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.

PASSED: Test 2, PCIe ASPM setting matched was matched.

================================================================================
4 passed, 0 failed, 8 warnings, 0 aborted, 0 skipped, 0 info only.
================================================================================

hpet_check: HPET configuration tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test HPET base in kernel log.
This test checks the HPET PCI BAR for each timer block in the timer. The base
address is passed by the firmware via an ACPI table. IRQ routing and
initialization is also verified by the test.
PASSED: Test 1, Found HPET base 0xfed00000 in kernel log.

Test 2 of 4: Test HPET base in HPET table. 
Hardware ID of Event Block:
  PCI Vendor ID              : 0x8086
  Legacy IRQ Routing Capable : 1
  COUNT_SIZE_CAP counter size: 1
  Number of comparitors      : 7
  Hardwre Revision ID        : 0x1
Lower 32 bit base Address    : 0xfed00000
  Address Space ID           : 0x0
  Register Bit Width         : 0x0
  Register Bit Offset        : 0x0
  Address Width              : 0x0
HPET sequence number         : 0x0
Minimum clock tick           : 0x37ee
Page Protection              : 0x0 (No guaranteed protection)
OEM attributes               : 0x0
PASSED: Test 2, HPET looks sane.

Test 3 of 4: Test HPET base in DSDT and/or SSDT. 
PASSED: Test 3, HPET base matches that between DSDT and the kernel (0xfed00000).

Test 4 of 4: Test HPET configuration.
PASSED: Test 4, Vendor ID looks sane: 0x8086.
PASSED: Test 4, Valid clock period 69841279.

================================================================================
5 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

dmicheck: DMI/SMBIOS table tests.
--------------------------------------------------------------------------------
Test 1 of 2: Find and test SMBIOS Table Entry Point.
This test tries to find and sanity check the SMBIOS data structures.
PASSED: Test 1, Found SMBIOS Table Entry Point at 0xf0460
SMBIOS Entry Point Structure:
  Anchor String          : _SM_
  Checksum               : 0xc3
  Entry Point Length     : 0x1f
  Major Version          : 0x02
  Minor Version          : 0x06
  Maximum Struct Size    : 0xb8
  Entry Point Revision   : 0x00
  Formatted Area         : 0x00 0x00 0x00 0x00 0x00
  Intermediate Anchor    : _DMI_
  Intermediate Checksum  : 0xf5
  Structure Table Length : 0x0b4c
  Structure Table Address: 0x000eb9e0
  # of SMBIOS Structures : 0x004f
  SBMIOS BCD Revision    : 26

PASSED: Test 1, SMBIOS Table Entry Point Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Point Length is valid.
PASSED: Test 1, SMBIOS Table Entry Intermediate Anchor String _DMI_ is valid.
PASSED: Test 1, SMBIOS Table Entry Point Intermediate Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Structure Table Address and Length looks
valid.

Test 2 of 2: Test DMI/SMBIOS tables for errors.
PASSED: Test 2, Entry @ 0x000eb9e0 'BIOS Information (Type 0)'
FAILED [MEDIUM] DMIAssetTag: Test 2, String index 0x05 in table entry 'Base
Board Information (Type 2)' @ 0x000eba27, field 'Asset Tag', offset 0x08 has a
default value 'ATN12345678901234567' and probably has not been updated by the
BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless. Note that the kernel uses this field so it probably should be corrected
to ensure the kernel is using sane values.


ADVICE: It may be worth checking against section 7.3 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [HIGH] DMIInvalidHardwareEntry: Test 2, Incorrect Chassis Type SMBIOS
Type 3 reports 0x8a

ADVICE: The Chassis Type in the ACPI FADT is out of range and hence we cannot
identify the preferred power management profile for this machine.


ADVICE: It may be worth checking against section 7.4 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x04 in table entry
'Processor Information (Type 4)' @ 0x000ebaf6, field 'Serial Number', offset
0x20 has a default value 'To Be Filled By O.E.M.' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x05 in table entry
'Processor Information (Type 4)' @ 0x000ebaf6, field 'Asset Tag', offset 0x21
has a default value 'To Be Filled By O.E.M.' and probably has not been updated
by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x06 in table entry
'Processor Information (Type 4)' @ 0x000ebaf6, field 'Part Number', offset 0x22
has a default value 'To Be Filled By O.E.M.' and probably has not been updated
by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.5 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x000ebbae 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000ebbcb 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000ebbe8 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000ebc05 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebc1d 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebc35 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebc51 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebc67 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebc7b 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebc8f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebca3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebcb7 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebccb 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebcdf 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebcf3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebd06 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebd24 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebd4e 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebd6a 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebd86 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebd9b 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebdb5 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebdd2 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebdf2 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebe13 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebe2d 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebe53 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebe70 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebe91 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebeb0 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebeca 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebee3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebf00 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebf1d 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebf39 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebf54 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebf6f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebf85 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebf9d 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebfb5 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebfce 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebfe3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ec002 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ec021 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ec03a 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec051 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec068 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec07f 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec096 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec0ad 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec0c4 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec0db 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec0f2 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec10a 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ec122 'On Board Devices (Type 10)'
FAILED [MEDIUM] DMISerialNumber: Test 2, String index 0x01 in table entry 'On
Board Devices (Type 10)' @ 0x000ec143, field 'Description (Device #0)', offset
0x05 has a default value 'To Be Filled By O.E.M.' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless. Note that the kernel uses this field so it probably should be corrected
to ensure the kernel is using sane values.


ADVICE: It may be worth checking against section 7.11 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x000ec161 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0x000ec182 'System Configuration Options (Type 12)'
PASSED: Test 2, Entry @ 0x000ec202 'Built-in Pointing Device (Type 21)'
PASSED: Test 2, Entry @ 0x000ec20b 'System Boot Information (Type 32)'
PASSED: Test 2, Entry @ 0x000ec221 'System Information (Type 1)'
PASSED: Test 2, Entry @ 0x000ec292 'OEM Strings (Type 11)'
PASSED: Test 2, Entry @ 0x000ec2d0 'Physical Memory Array (Type 16)'
FAILED [LOW] DMIAssetTag: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0x000ec2e1, field 'Asset Tag', offset 0x19 has a default
value '9876543210' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x000ec343 'Memory Device Mapped Address (Type 20)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x03 in table entry 'Memory
Device (Type 17)' @ 0x000ec358, field 'Manufacturer', offset 0x17 has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x04 in table entry 'Memory
Device (Type 17)' @ 0x000ec358, field 'Serial Number', offset 0x18 has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMIAssetTag: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0x000ec358, field 'Asset Tag', offset 0x19 has a default
value '9876543210' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x06 in table entry 'Memory
Device (Type 17)' @ 0x000ec358, field 'Part Number', offset 0x1a has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMIAssetTag: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0x000ec3ae, field 'Asset Tag', offset 0x19 has a default
value '9876543210' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [HIGH] DMIIllegalMappedAddrRange: Test 2, Illegal zero mapped address
range for entry 'Memory Device Mapped Address (Type 20)' @ 0x000ec416

ADVICE: It may be worth checking against section 7.21 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x03 in table entry 'Memory
Device (Type 17)' @ 0x000ec42b, field 'Manufacturer', offset 0x17 has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x04 in table entry 'Memory
Device (Type 17)' @ 0x000ec42b, field 'Serial Number', offset 0x18 has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMIAssetTag: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0x000ec42b, field 'Asset Tag', offset 0x19 has a default
value '9876543210' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x06 in table entry 'Memory
Device (Type 17)' @ 0x000ec42b, field 'Part Number', offset 0x1a has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x000ec481 'Memory Array Mapped Address (Type 19)'
PASSED: Test 2, Entry @ 0x000ec492 'Unknown (Type 129)'
PASSED: Test 2, Entry @ 0x000ec4b3 'Unknown (Type 130)'
PASSED: Test 2, Entry @ 0x000ec4c9 'Unknown (Type 131)'
PASSED: Test 2, Entry @ 0x000ec50b 'BIOS Language Information (Type 13)'
PASSED: Test 2, Entry @ 0x000ec526 'End of Table (Type 127)'

================================================================================
76 passed, 17 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

microcode: Test if system is using latest microcode.
--------------------------------------------------------------------------------
Test 1 of 1: Test for most recent microcode being loaded.
This test verifies if the firmware has put a recent revision of the microcode
into the processor at boot time. Recent microcode is important to have all the
required features and errata updates for the processor.
FAILED [MEDIUM] MicrocodeNotUpdated: Test 1, The kernel did not report that CPU
0 has had a microcode update. The current firmware is revision 0x18 and probably
has not been updated.
FAILED [MEDIUM] MicrocodeNotUpdated: Test 1, The kernel did not report that CPU
1 has had a microcode update. The current firmware is revision 0x18 and probably
has not been updated.
FAILED [MEDIUM] MicrocodeNotUpdated: Test 1, The kernel did not report that CPU
2 has had a microcode update. The current firmware is revision 0x18 and probably
has not been updated.
FAILED [MEDIUM] MicrocodeNotUpdated: Test 1, The kernel did not report that CPU
3 has had a microcode update. The current firmware is revision 0x18 and probably
has not been updated.
FAILED [MEDIUM] MicrocodeNotUpdated: Test 1, The kernel did not report that CPU
4 has had a microcode update. The current firmware is revision 0x18 and probably
has not been updated.
FAILED [MEDIUM] MicrocodeNotUpdated: Test 1, The kernel did not report that CPU
5 has had a microcode update. The current firmware is revision 0x18 and probably
has not been updated.
FAILED [MEDIUM] MicrocodeNotUpdated: Test 1, The kernel did not report that CPU
6 has had a microcode update. The current firmware is revision 0x18 and probably
has not been updated.
FAILED [MEDIUM] MicrocodeNotUpdated: Test 1, The kernel did not report that CPU
7 has had a microcode update. The current firmware is revision 0x18 and probably
has not been updated.

================================================================================
0 passed, 8 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

msr: MSR register tests.
--------------------------------------------------------------------------------
Test 1 of 5: Test CPU generic MSRs.
PASSED: Test 1, MSR 0x00000001 P5_MC_TYPE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000006 MONITOR_FILTER_SIZE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000017 PLATFORM_ID is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000002a EBL_CR_POWERON is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000001b APIC_BASE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000003a FEATURE_CONTROL is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000008b BIOS_SIGN_ID is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000000fe MTRRCAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000174 SYSENTER_CS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000175 SYSENTER_ESP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000176 SYSENTER_EIP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000179 MCG_CAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000017a MCG_STATUS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000019a CLOCK_MODULATION is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000019b THERM_INTERRUPT is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001a0 MISC_ENABLE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001b2 PACKAGE_THERM_INTERRUPT is consistent across 8
CPUs.
PASSED: Test 1, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000200 MTRR_PHYSBASE0 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000201 MTRR_PHYSMASK0 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000202 MTRR_PHYSBASE1 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000203 MTRR_PHYSMASK1 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000204 MTRR_PHYSBASE2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000205 MTRR_PHYSMASK2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000206 MTRR_PHYSBASE3 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000207 MTRR_PHYSMASK3 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000208 MTRR_PHYSBASE4 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000209 MTRR_PHYSMASK4 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020a MTRR_PHYSBASE5 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020b MTRR_PHYSMASK5 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020c MTRR_PHYSBASE6 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020d MTRR_PHYSMASK6 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020e MTRR_PHYSBASE7 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020f MTRR_PHYSMASK7 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000210 MTRR_PHYSBASE8 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000211 MTRR_PHYSMASK8 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000212 MTRR_PHYSBASE9 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000213 MTRR_PHYSMASK9 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000250 MTRR_FIX64K_000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000258 MTRR_FIX16K_800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000259 MTRR_FIX16K_a00 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000268 MTRR_FIX4K_C000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000269 MTRR_FIX4K_C800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026a MTRR_FIX4K_D000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026b MTRR_FIX4K_D800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026c MTRR_FIX4K_E000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026d MTRR_FIX4K_E800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026e MTRR_FIX4K_F000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026f MTRR_FIX4K_F800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000277 PAT is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000280 MC0_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000281 MC1_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000282 MC2_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000283 MC3_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000284 MC4_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000285 MC5_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000286 MC6_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000287 MC7_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000288 MC8_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000002ff MTRR_DEF_TYPE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000003f1 PEBS_ENABLE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000480 VMX_BASIC is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000481 VMX_PINPASED_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000482 VMX_PROCBASED_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000483 VMX_EXIT_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000484 VMX_ENTRY_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000485 VMX_MISC is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000486 VMX_CR0_FIXED0 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000487 VMX_CR0_FIXED1 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000488 VMX_CR4_FIXED0 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000489 VMX_CR4_FIXED1 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000048a VMX_VMX_VMCS_ENUM is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000048b VMX_PROCBASED_CTLS2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000048c VMX_EPT_VPID_CAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000048d VMX_TRUE_PINBASED_CTLS is consistent across 8
CPUs.
PASSED: Test 1, MSR 0x0000048e VMX_TRUE_PROCBASED_CTLS is consistent across 8
CPUs.
PASSED: Test 1, MSR 0x0000048f VMX_TRUE_EXIT_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000490 VMX_TRUE_ENTRY_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000080 EFER is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000081 STAR is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000082 LSTAR is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000084 FMASK is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000102 KERNEL_GS_BASE is consistent across 8 CPUs.

Test 2 of 5: Test CPU specific model MSRs.
CPU family: 0x6, model: 0x2a (Sandybridge)
PASSED: Test 2, MSR 0x0000008b BIOS_SIGN_ID is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x000000ce MSR_PLATFORM_INFO is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x000000e2 MSR_PKG_CST_CONFIG_CONTROL is consistent across 8
CPUs.
PASSED: Test 2, MSR 0x000000e4 MSR_PMG_IO_CAPTURE_BASE is consistent across 8
CPUs.
PASSED: Test 2, MSR 0x000001a2 MSR_TEMPERATURE_TARGET is consistent across 8
CPUs.
PASSED: Test 2, MSR 0x000001a6 MSR_OFFCORE_RSP_0 is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x000001ad MSR_TURBO_RATIO_LIMIT is consistent across 8
CPUs.
PASSED: Test 2, MSR 0x000001fc MSR_POWER_CTL is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x0000060a MSR_PKGC3_IRTL is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x0000060b MSR_PKGC6_IRTL is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x0000060c MSR_PKGC7_IRTL is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x00000610 MSR_PKG_RAPL_POWER_LIMIT is consistent across 8
CPUs.
PASSED: Test 2, MSR 0x00000614 MSR_PKG_RAPL_POWER_INFO is consistent across 8
CPUs.
PASSED: Test 2, MSR 0x00000638 MSR_PP0_POWER_LIMIT is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x0000063a MSR_PP0_POLICY is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x00000640 MSR_PP1_POWER_LIMIT is consistent across 8 CPUs.
PASSED: Test 2, MSR 0x00000642 MSR_PP1_POLICY is consistent across 8 CPUs.

Test 3 of 5: Test all P State Ratios.
PASSED: Test 3, MSR 0x000000ce Minimum P-State is consistent across 8 CPUs.
PASSED: Test 3, MSR 0x000000ce Maximum P-State is consistent across 8 CPUs.

Test 4 of 5: Test C1 and C3 autodemotion.
PASSED: Test 4, MSR 0x000000e2 C1 and C3 Autodemotion is consistent across 8
CPUs.
C1 and C3 Autodemotion enabled.

Test 5 of 5: Test SMRR MSR registers.
PASSED: Test 5, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 8 CPUs.
PASSED: Test 5, MSR 0x000001f2 SMRR_TYPE is consistent across 8 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 8 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_VALID is consistent across 8 CPUs.

================================================================================
108 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

nx: Test if CPU NX is disabled by the BIOS.
--------------------------------------------------------------------------------
Test 1 of 3: Test CPU NX capability.
PASSED: Test 1, CPU has NX flags, BIOS is not disabling it.

Test 2 of 3: Test all CPUs have same BIOS set NX flag.
This test verifies that all CPUs have the same NX flag setting. Although rare,
BIOS may set the NX flag differently per CPU. 
PASSED: Test 2, All 8 CPUs have the same NX flag set.

Test 3 of 3: Test all CPUs have same msr setting in MSR 0x1a0.
This test verifies that all CPUs have the same NX flag setting by examining the
per CPU MSR register 0x1a0.
PASSED: Test 3, All 8 CPUs have the NX flag in MSR 0x1a0 set.

================================================================================
3 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

cpufreq: CPU frequency scaling tests.
--------------------------------------------------------------------------------
Test 1 of 1: CPU P-State tests.
For each processor in the system, this test steps through the various frequency
states (P-states) that the BIOS advertises for the processor. For each processor
/frequency combination, a quick performance value is measured. The test then
validates that:
  1. Each processor has the same number of frequency states.
  2. Higher advertised frequencies have a higher performance.
  3. No duplicate frequency values are reported by the BIOS.
  4. BIOS doing Sw_All P-state coordination across cores.
  5. BIOS doing Sw_Any P-state coordination across cores.

CPU 0: 14 CPU frequency steps supported.
 Frequency | Relative Speed | Bogo loops
-----------+----------------+-----------
  2.05 GHz |     100.0 %    |    243637
  2.05 GHz |      70.6 %    |    172058
  1.95 GHz |      66.6 %    |    162310
  1.85 GHz |      63.2 %    |    153876
  1.75 GHz |      59.7 %    |    145555
  1.65 GHz |      56.2 %    |    136916
  1500 MHz |      52.6 %    |    128093
  1400 MHz |      49.0 %    |    119337
  1300 MHz |      44.9 %    |    109277
  1200 MHz |      41.5 %    |    101108
  1100 MHz |      38.3 %    |     93223
  1000 MHz |      33.9 %    |     82526
   900 MHz |      30.9 %    |     75185
   800 MHz |      27.4 %    |     66867

CPU 1: 14 CPU frequency steps supported.
 Frequency | Relative Speed | Bogo loops
-----------+----------------+-----------
  2.05 GHz |     100.0 %    |    232903
  2.05 GHz |      74.2 %    |    172705
  1.95 GHz |      70.5 %    |    164203
  1.85 GHz |      66.5 %    |    154876
  1.75 GHz |      63.0 %    |    146813
  1.65 GHz |      59.3 %    |    138126
  1500 MHz |      55.6 %    |    129465
  1400 MHz |      51.9 %    |    120978
  1300 MHz |      48.2 %    |    112360
  1200 MHz |      44.4 %    |    103484
  1100 MHz |      40.7 %    |     94894
  1000 MHz |      37.0 %    |     86214
   900 MHz |      33.3 %    |     77640
   800 MHz |      29.6 %    |     68964

CPU 2: 14 CPU frequency steps supported.
 Frequency | Relative Speed | Bogo loops
-----------+----------------+-----------
  2.05 GHz |     100.0 %    |    229427
  2.05 GHz |      75.0 %    |    172021
  1.95 GHz |      71.4 %    |    163842
  1.85 GHz |      67.3 %    |    154353
  1.75 GHz |      63.8 %    |    146345
  1.65 GHz |      59.0 %    |    135399
  1500 MHz |      56.2 %    |    129000
  1400 MHz |      52.6 %    |    120788
  1300 MHz |      48.6 %    |    111592
  1200 MHz |      45.0 %    |    103248
  1100 MHz |      41.4 %    |     94937
  1000 MHz |      37.6 %    |     86224
   900 MHz |      33.8 %    |     77596
   800 MHz |      30.1 %    |     69035

